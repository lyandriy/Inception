Docker
https://datascientest.com/es/docker-todo-que-saber

Servidor web
https://www.hostinger.es/tutoriales/que-es-un-servidor-web

TLS
https://www.cloudflare.com/es-es/learning/ssl/transport-layer-security-tls/

Ejecutar contenedor
https://atareao.es/tutorial/docker/ejecutar-contenedores-docker/

Docker compose
https://docs.docker.com/compose/reference/     comandos
https://www.okteto.com/docs/1.17/reference/docker-compose/
https://geekebrains.com/code-brains/docker-compose
https://anderfernandez.com/blog/tutorial-docker-compose/
https://coffeebytes.dev/es/docker-compose-tutorial-con-comandos-en-gnu-linux/
https://www.baeldung.com/ops/docker-compose
https://imaginaformacion.com/tutoriales/que-es-docker-compose

Dockerfile
https://docs.docker.com/reference/dockerfile/
https://desarrollofront.medium.com/las-10-instrucciones-imprescindibles-para-crear-un-dockerfile-bb439ff836d9

Comandos Docker
https://www.hostinger.es/tutoriales/comandos-docker
https://kinsta.com/es/blog/comandos-docker/

Redes en docker
https://atareao.es/tutorial/docker/redes-en-docker/
https://www.josedomingo.org/pledin/2020/02/redes-en-docker/

Volumenes
https://kinsta.com/es/blog/volumenes-docker-compose/

WordPress
https://www.youtube.com/watch?v=a86m_lTQzz4

network
https://www.linkedin.com/pulse/docker-mapeo-de-puertos-port-mapping-gabriel-alonso-ibarlucea/
https://loquemeinteresadelared.wordpress.com/2015/12/14/crear-una-nueva-red-en-docker-y-conectarle-dos-nuevos-contenedores/
https://apuntes.de/docker-certificacion-dca/redireccion-de-puertos/#gsc.tab=0

page:
https://www.ionos.es/digitalguide/hosting/blogs/wordpress-en-nginx/ !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
https://www.digitalocean.com/community/tutorials/how-to-install-linux-nginx-mariadb-php-lemp-stack-on-debian-10#step-2-installing-mariadb
https://iesgn.github.io/curso_docker_2021/sesion5/redes.html

nginx
https://kinsta.com/es/blog/proxy-inverso/
https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/     proxy
https://superadmin.es/blog/devops/proxy-inverso-wordpress-nginx/
https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-server-blocks-virtual-hosts-on-ubuntu-16-04
https://linuxy.top/es/nginx-debian
https://friendhosting.net/en/blog/install-nginx-on-debian-11.php

PHP
https://www.hostingplus.com.es/blog/que-es-un-servidor-php-y-sus-tipos/#:~:text=Un%20PHP%20server%20o%20servidor,que%20realizan%20peticiones%20de%20acceso.

SSL/TLS
https://www.ibm.com/docs/es/license-metric-tool?topic=certificate-step-1-creating-private-keys-certificates
https://www.ibm.com/docs/es/license-metric-tool?topic=certificate-step-2-signing-certificates
https://programmeratwork.com/2015/07/21/Servidor-nginx-con-SSL-en-un-paso-con-Docker/
https://blog.eamexicano.com/ssl/certificado-openssl/

MariaDB
https://conpilar.es/como-crear-cuentas-de-usuarios-de-mariadb-y-otorgar-privilegios/

Aunque los contenedores comparten el núcleo del sistema operativo subyacente, están diseñados para proporcionar aislamiento a nivel de proceso, red y sistema de archivos. Aquí te explico cómo funciona este aislamiento:

1. **Espacios de nombres (Namespaces)**: Los contenedores utilizan espacios de nombres para proporcionar un entorno aislado para procesos, redes, ID de usuario y sistemas de archivos. Esto significa que cada contenedor tiene su propio conjunto de identificadores para procesos, interfaces de red, usuarios y puntos de montaje de sistema de archivos. Por lo tanto, los procesos que se ejecutan dentro de un contenedor no son visibles desde fuera del contenedor ni interactúan con los procesos de otros contenedores.

2. **Grupos de control (cgroups)**: Los contenedores utilizan grupos de control para limitar y controlar los recursos que pueden utilizar, como la cantidad de CPU, memoria y almacenamiento. Esto asegura que un contenedor no pueda consumir todos los recursos del sistema y afectar negativamente a otros contenedores o aplicaciones en ejecución.

3. **Sistema de archivos aislado**: Aunque los contenedores comparten el núcleo del sistema operativo subyacente, cada contenedor tiene su propio sistema de archivos raíz. Esto significa que los contenedores pueden tener diferentes versiones de bibliotecas y archivos de configuración sin afectar a otros contenedores. Además, los cambios realizados dentro de un contenedor no afectan a los otros contenedores o al sistema operativo anfitrión.

En resumen, aunque los contenedores comparten el mismo núcleo del sistema operativo, utilizan técnicas como los espacios de nombres, los grupos de control y los sistemas de archivos aislados para proporcionar un entorno aislado y seguro para ejecutar aplicaciones de forma independiente y eficiente.

